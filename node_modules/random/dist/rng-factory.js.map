{"version":3,"sources":["../src/rng-factory.js"],"names":["PRNG_BUILTINS","RNGXOR128","RNGFunction","RNGMathRandom","args","arg0","rest","RNG","PRNG","Error"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,gBAAgB;AACpB;AACA,YAAUC,aAFU;AAGpB,cAAYC,kBAHQ;AAIpB,aAAWC;AAJS,CAAtB;;kBAOe,YAAa;AAAA,oCAATC,IAAS;AAATA,QAAS;AAAA;;AAAA,eACYA,IADZ;AAAA,MAClBC,IADkB,0BACX,SADW;AAAA,MACGC,IADH,GACYF,IADZ;;;AAG1B,iBAAeC,IAAf,yCAAeA,IAAf;AACE,SAAK,QAAL;AACE,UAAIA,gBAAgBE,aAApB,EAAyB;AACvB,eAAOF,IAAP;AACD;AACD;;AAEF,SAAK,UAAL;AACE,aAAO,IAAIH,kBAAJ,CAAgBG,IAAhB,CAAP;;AAEF,SAAK,QAAL;AACE,UAAMG,OAAOR,cAAcK,IAAd,CAAb;AACA,UAAIG,IAAJ,EAAU;AACR,kDAAWA,IAAX,mCAAmBF,IAAnB;AACD;AACD;AAfJ;;AAkBA,QAAM,IAAIG,KAAJ,mBAA0BJ,IAA1B,OAAN;AACD,C","file":"rng-factory.js","sourcesContent":["import RNG from './rng'\n\nimport RNGXOR128 from './generators/xor128'\nimport RNGFunction from './generators/function'\nimport RNGMathRandom from './generators/math-random'\n\nconst PRNG_BUILTINS = {\n  // TODO: add more prng from C++11 lib\n  'xor128': RNGXOR128,\n  'function': RNGFunction,\n  'default': RNGMathRandom\n}\n\nexport default (...args) => {\n  const [ arg0 = 'default', ...rest ] = args\n\n  switch (typeof arg0) {\n    case 'object':\n      if (arg0 instanceof RNG) {\n        return arg0\n      }\n      break\n\n    case 'function':\n      return new RNGFunction(arg0)\n\n    case 'string':\n      const PRNG = PRNG_BUILTINS[arg0]\n      if (PRNG) {\n        return new PRNG(...rest)\n      }\n      break\n  }\n\n  throw new Error(`invalid RNG \"${arg0}\"`)\n}\n"]}